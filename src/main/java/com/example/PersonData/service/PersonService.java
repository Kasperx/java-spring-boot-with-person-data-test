
package com.example.PersonData.service;

import java.util.List;
import java.util.Random;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.github.javafaker.Faker;
import com.example.PersonData.model.Person;
import com.example.PersonData.repository.PersonRepository;

@Service // This means that this class is a service
public class PersonService extends Tools{
	@Autowired
	// This means to get the bean which is auto-generated by Spring
	// We will use it to handle the data
	PersonRepository employeeRepository;
	Person employee;

	//	get all employees
	public List<Person> getAllEmployees() {

		//		find all employees data, then return it
		return employeeRepository.findAll();
	}

	// save an employee
	public void saveEmployee(Person emp) {
		//		save employee data to database
		employeeRepository.save(emp);
	}

	//	get employee by id
	public Person getEmployeeById(Long id) {
		//		find an employee by id
		Person emp = employeeRepository.getById(id);

		//		if there is not an employee who has the id, throw the error.
		if (emp == null) {
			throw new RuntimeException("Employee not found");
		}
		return emp;
	}

	//	delete employee by id
	public String deleteEmployeeById(Long id) {
		//		find an employee by id
		Person emp = employeeRepository.getById(id);

		//		if there is not an employee who has the id, throw the error.
		if (emp == null) {
			throw new RuntimeException("Employee not found");
		}

		//		delete an employee who has the id from the database
		employeeRepository.deleteById(id);
		return "Deleted: " + emp.getFirstName() + " " + emp.getLastName();
	}
	public void createData() {
		
		employeeRepository.deleteAll();
		Person employee = null;
		for(int count=0; count<10; count++) {
		
			/*********/
			faker = new Faker();
			/*********/
			employee = new Person();
			employee.setFirstName(faker.name().firstName());
			employee.setLastName(faker.name().lastName());
			employee.setAge(new Random().nextInt(120 + 1) + 1);
			employee.setEmail(faker.name().firstName().substring(0,1)+"."+faker.name().lastName()+"@gmail.com");
			System.out.println("##############\n"+employee.toString());
			employeeRepository.save(employee);
		}
	}
}
